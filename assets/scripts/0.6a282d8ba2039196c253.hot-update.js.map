{"version":3,"sources":["webpack:///./app/scripts/yandex.js?0cea"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;KAEqB,W;AAEpB,uBAAY,KAAZ,EAAmB;AAAA;;AAClB,QAAK,GAAL,GAAW,MAAM,OAAjB;AACA;;;;;;;;;;;;;;;;8BAcU,M,EAAQ;AAClB,QAAG,OAAO,MAAP,IAAiB,CAApB,EAAsB;AACrB;AACA;AACD,SAAK,MAAL,GAAc,MAAd;AACA,UAAM,KAAN,CAAY,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAZ;AACA;;;iCAEa;AACb,YAAQ,GAAR,CAAY,KAAK,MAAjB;;AAEA,QAAI,QAAQ,KAAK,GAAjB;AACA,YAAQ,GAAR,CAAY,kBAAZ;;;;;;;AAOA,UAAM,KAAN,CAAY,KAAK,MAAjB,EAAyB,IAAzB,CAA8B,UAAS,KAAT,EAAgB;AAC7C,WAAM,UAAN,CAAiB,GAAjB,CAAqB,KAArB;;AAEA,aAAQ,GAAR,CAAY,KAAZ;;;;AAIA,SAAI,SAAS,MAAM,YAAN,EAAb;SACC,YAAY,OAAO,SAAP,KAAqB,CADlC;;;AAIA,YAAO,OAAP,CAAe,GAAf,CAAmB,QAAnB,EAA6B,uBAA7B;;;AAGA,YAAO,GAAP,CAAW,CAAX,EAAc,UAAd,CAAyB,GAAzB,CAA6B,aAA7B,EAA4C,mBAA5C;AACA,YAAO,GAAP,CAAW,SAAX,EAAsB,UAAtB,CAAiC,GAAjC,CAAqC,aAArC,EAAoD,gBAApD;;;;;;;;;;;AAWA,SAAI,WAAW,iBAAf;SACC,GADD;SAEC,QAFD;;AAIA,UAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,QAAN,GAAiB,SAAjB,EAApB,EAAkD,GAAlD,EAAuD;AACtD,YAAM,MAAM,QAAN,GAAiB,GAAjB,CAAqB,CAArB,CAAN;AACA,iBAAW,IAAI,WAAJ,EAAX;AACA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACzC,WAAI,SAAS,SAAS,CAAT,EAAY,SAAZ,EAAb;AACA,mBAAa,UAAU,SAAS,CAAT,EAAY,cAAZ,EAAV,IAA0C,SAAS,SAAS,MAAlB,GAA2B,EAArE,IAA2E,cAA3E,GAA4F,SAAS,CAAT,EAAY,SAAZ,EAA5F,GAAsH,MAAnI;AACA,mBAAY,OAAZ;AACA;AACD;AACD,iBAAY,kBAAZ;;AAEA,2BAAE,OAAF,EAAW,MAAX,CAAkB,QAAlB;AACA,KA1CD,EA0CG,UAAS,KAAT,EAAgB;AAClB,WAAM,sBAAsB,MAAM,OAAlC;AACA,KA5CD;AA6CA;;;;;;;;;;;mBAlFmB,W","file":"0.6a282d8ba2039196c253.hot-update.js","sourcesContent":["import $ from 'jquery';\n\nexport default class YandexRoute {\n\n\tconstructor(layer) {\n\t\tthis.map = layer._yandex;\n\t}\n\n\n\n\t\t// console.log(domNode);\n\n\t\t/*var myMap = new ymaps.Map(\"map\", {\n\t\t\t\tcenter: [55.745508, 37.435225],\n\t\t\t\tzoom: 13\n\t\t\t}, {\n\t\t\t\tsearchControlProvider: 'yandex#search'\n\t\t\t});*/\n\n\t// console.log(ymaps);\n\tbuildRoute(points) {\n\t\tif(points.length != 3){\n\t\t\treturn;\n\t\t}\n\t\tthis.points = points;\n\t\tymaps.ready(this._buildRoute.call(this));\n\t}\n\n\t_buildRoute() {\n\t\tconsole.log(this.points);\n\n\t\tlet myMap = this.map;\n\t\tconsole.log('building a route');\n\n\t\t// Добавим на карту схему проезда\n\t\t// от улицы Крылатские холмы до станции метро \"Кунцевская\"\n\t\t// через станцию \"Молодежная\" и затем до станции \"Пионерская\".\n\t\t// Точки маршрута можно задавать 3 способами:\n\t\t// как строка, как объект или как массив геокоординат.\n\t\tymaps.route(this.points).then(function(route) {\n\t\t\tmyMap.geoObjects.add(route);\n\n\t\t\tconsole.log(route);\n\t\t\t// Зададим содержание иконок начальной и конечной точкам маршрута.\n\t\t\t// С помощью метода getWayPoints() получаем массив точек маршрута.\n\t\t\t// Массив транзитных точек маршрута можно получить с помощью метода getViaPoints.\n\t\t\tvar points = route.getWayPoints(),\n\t\t\t\tlastPoint = points.getLength() - 1;\n\t\t\t// Задаем стиль метки - иконки будут красного цвета, и\n\t\t\t// их изображения будут растягиваться под контент.\n\t\t\tpoints.options.set('preset', 'twirl#redStretchyIcon');\n\n\t\t\t// Задаем контент меток в начальной и конечной точках.\n\t\t\tpoints.get(0).properties.set('iconContent', 'Точка отправления');\n\t\t\tpoints.get(lastPoint).properties.set('iconContent', 'Точка прибытия');\n\n\t\t\t// Проанализируем маршрут по сегментам.\n\t\t\t// Сегмент - участок маршрута, который нужно проехать до следующего\n\t\t\t// изменения направления движения.\n\t\t\t// Для того, чтобы получить сегменты маршрута, сначала необходимо получить\n\t\t\t// отдельно каждый путь маршрута.\n\t\t\t// Весь маршрут делится на два пути:\n\t\t\t// 1) от улицы Крылатские холмы до станции \"Кунцевская\";\n\t\t\t// 2) от станции \"Кунцевская\" до \"Пионерская\".\n\n\t\t\tvar moveList = 'Трогаемся,</br>',\n\t\t\t\tway,\n\t\t\t\tsegments;\n\t\t\t// Получаем массив путей.\n\t\t\tfor (var i = 0; i < route.getPaths().getLength(); i++) {\n\t\t\t\tway = route.getPaths().get(i);\n\t\t\t\tsegments = way.getSegments();\n\t\t\t\tfor (var j = 0; j < segments.length; j++) {\n\t\t\t\t\tvar street = segments[j].getStreet();\n\t\t\t\t\tmoveList += ('Едем ' + segments[j].getHumanAction() + (street ? ' на ' + street : '') + ', проезжаем ' + segments[j].getLength() + ' м.,');\n\t\t\t\t\tmoveList += '</br>'\n\t\t\t\t}\n\t\t\t}\n\t\t\tmoveList += 'Останавливаемся.';\n\t\t\t// Выводим маршрутный лист.\n\t\t\t$('#list').append(moveList);\n\t\t}, function(error) {\n\t\t\talert('Возникла ошибка: ' + error.message);\n\t\t});\n\t}\n\t// return buildRoute(domNode)\n}\n\n\n// export default YandexRoute;\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/scripts/yandex.js\n **/"],"sourceRoot":""}